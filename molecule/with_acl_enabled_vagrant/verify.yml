---
- name: Verify
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: "Test: directory /etc/consul.d"
      block:
        - name: "Stat directory /etc/consul.d"
          ansible.builtin.stat:
            path: "/etc/consul.d"
          register: stat_etc_consul_d

        - name: "Stat file /etc/default/consul"
          ansible.builtin.stat:
            path: "/etc/default/consul"
          register: stat_etc_default_consul

        - name: "Stat file /etc/consul.d/consul.json"
          ansible.builtin.stat:
            path: "/etc/consul.d/consul.json"
          register: stat_etc_consul_d_consul_json

        - name: "Slurp file /etc/consul.d/consul.json"
          ansible.builtin.slurp:
            src: "/etc/consul.d/consul.json"
          register: slurp_etc_consul_d_consul_json

        - name: "Verify directory /etc/consul.d"
          ansible.builtin.assert:
            that:
              - stat_etc_consul_d.stat.exists
              - stat_etc_consul_d.stat.isdir
              - (stat_etc_consul_d.stat.uid | int) == 100
              - (stat_etc_consul_d.stat.gid | int) == 1000
              - stat_etc_consul_d.stat.mode == '0755'
              - stat_etc_default_consul.stat.exists
              - stat_etc_default_consul.stat.isreg
              - stat_etc_default_consul.stat.pw_name == 'root'
              - stat_etc_default_consul.stat.gr_name == 'root'
              - stat_etc_default_consul.stat.mode == '0600'
              - stat_etc_consul_d_consul_json.stat.exists
              - stat_etc_consul_d_consul_json.stat.isreg
              - (stat_etc_consul_d_consul_json.stat.uid | int) == 100
              - (stat_etc_consul_d_consul_json.stat.gid | int) == 1000
              - stat_etc_consul_d_consul_json.stat.mode == '0600'
              - slurp_etc_consul_d_consul_json.content != ''

    - name: "Test: directory /opt/consul/data"
      block:
        - name: "Stat directory /opt/consul/data"
          ansible.builtin.stat:
            path: "/opt/consul/data"
          register: stat_opt_consul_data

        - name: "Verify directory /opt/consul/data"
          ansible.builtin.assert:
            that:
              - stat_opt_consul_data.stat.exists
              - stat_opt_consul_data.stat.isdir
              - (stat_opt_consul_data.stat.uid | int) == 100
              - (stat_opt_consul_data.stat.gid | int) == 1000
              - stat_opt_consul_data.stat.mode == '0755'

    - name: "Test: service consul"
      block:
        - name: "Get service consul"
          ansible.builtin.service_facts:

        - name: "Stat file /etc/systemd/system/consul_container.service"
          ansible.builtin.stat:
            path: "/etc/systemd/system/consul_container.service"
          register: stat_etc_systemd_system_consul_container_service

        - name: "Slurp file /etc/systemd/system/consul_container.service"
          ansible.builtin.slurp:
            src: "/etc/systemd/system/consul_container.service"
          register: slurp_etc_systemd_system_consul_container_service

        - name: "Verify service consul"
          vars:
            expected_consul_service_file: |
              # Ansible managed: Do NOT edit this file manually!
              [Unit]
              After=docker.service
              PartOf=docker.service
              Requires=docker.service

              [Service]
              EnvironmentFile=/etc/default/consul
              ExecStartPre=-/usr/bin/docker rm -f consul
              ExecStart=/usr/bin/docker run --name consul \
              --rm \
              --env-file /etc/default/consul \
              --network "host" \
              --volume "/etc/consul.d:/consul/config" \
              --volume "/opt/consul/data:/opt/consul/data" \
              --volume "/usr/local/bin/envoy:/usr/local/bin/envoy" \
              --volume "/etc/consul.d/extra_files:/etc/consul.d/extra_files" \
              --volume "/opt/consul/tls:/opt/consul/tls" \
              hashicorp/consul:1.17.1-ubi agent
              ExecStop=/usr/bin/docker stop consul
              SyslogIdentifier=consul
              Restart=always
              RestartSec=10s

              [Install]
              WantedBy=docker.service
          ansible.builtin.assert:
            that:
              - stat_etc_systemd_system_consul_container_service.stat.exists
              - stat_etc_systemd_system_consul_container_service.stat.isreg
              - stat_etc_systemd_system_consul_container_service.stat.pw_name == 'root'
              - stat_etc_systemd_system_consul_container_service.stat.gr_name == 'root'
              - stat_etc_systemd_system_consul_container_service.stat.mode == '0644'
              - ansible_facts.services['consul_container.service'] is defined
              - ansible_facts.services['consul_container.service']['source'] == 'systemd'
              - ansible_facts.services['consul_container.service']['state'] == 'running'
              - ansible_facts.services['consul_container.service']['status'] == 'enabled'
              - (slurp_etc_systemd_system_consul_container_service.content|b64decode) == expected_consul_service_file


    - name: "Test: interaction consul"
      vars:
        acl_token: "1a1f2ce5-3730-47de-9a9c-89e037376bab"
      block:
        - name: "Command consul kv put"
          community.docker.docker_container_exec:
            container: consul
            command: "/bin/consul kv put foo bar"
            env:
              CONSUL_HTTP_TOKEN: "{{ acl_token }}"
          changed_when: false
          register: consul_kv_put

        - name: "Command consul kv get"
          community.docker.docker_container_exec:
            container: consul
            command: "/bin/consul kv get foo"
            env:
              CONSUL_HTTP_TOKEN: "{{ acl_token }}"
          changed_when: false
          register: consul_kv_get

        - name: "Command consul kv delete"
          community.docker.docker_container_exec:
            container: consul
            command: "/bin/consul kv delete foo"
            env:
              CONSUL_HTTP_TOKEN: "{{ acl_token }}"
          changed_when: false
          register: consul_kv_delete

        - name: "Command consul members"
          community.docker.docker_container_exec:
            container: consul
            command: "/bin/consul members"
            env:
              CONSUL_HTTP_TOKEN: "{{ acl_token }}"
          changed_when: false
          register: consul_members

        - name: "Verify consul interaction"
          ansible.builtin.assert:
            that:
              - "'instance' in consul_members.stdout"
              - consul_kv_put.stdout == 'Success! Data written to: foo'
              - consul_kv_get.stdout == 'bar'
              - consul_kv_delete.stdout == 'Success! Deleted key: foo'
